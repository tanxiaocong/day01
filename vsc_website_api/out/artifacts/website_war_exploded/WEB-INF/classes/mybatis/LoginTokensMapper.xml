<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vsc.website.dao.LoginTokensMapper">
    <resultMap id="BaseResultMap" type="com.vsc.website.entity.LoginTokens">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="time_limit" property="timeLimit" jdbcType="BIGINT"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="INTEGER"/>
        <result column="language" property="language" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, ip, time_limit, token, type, user_id, create_at, create_user, update_at, update_user, language
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from login_tokens
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_tokens
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.vsc.website.entity.LoginTokens">
        insert into login_tokens (id,ip, time_limit,
        token, type, user_id, create_at,
        create_user, update_at, update_user, language
        )
        values (#{id,jdbcType=INTEGER},#{ip,jdbcType=VARCHAR}, #{timeLimit,jdbcType=BIGINT},
        #{token,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP},
        #{createUser,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER},
        #{language,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.vsc.website.entity.LoginTokens">
        insert into login_tokens
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="timeLimit != null">
                time_limit,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="language != null">
                language,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="timeLimit != null">
                #{timeLimit,jdbcType=BIGINT},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="language != null">
                #{language,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.vsc.website.entity.LoginTokens">
        update login_tokens
        <set>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="timeLimit != null">
                time_limit = #{timeLimit,jdbcType=BIGINT},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="language != null">
                language = #{language,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vsc.website.entity.LoginTokens">
    update login_tokens
    set ip = #{ip,jdbcType=VARCHAR},
      time_limit = #{timeLimit,jdbcType=BIGINT},
      token = #{token,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      language = #{language,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="clearOverdueTokens" parameterType="java.lang.Long">
        delete from login_tokens
        where time_limit &lt; #{currentTime,jdbcType=BIGINT}
    </delete>
    <select id="selectByToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from login_tokens
        where token = #{token,jdbcType=VARCHAR} and time_limit &gt; #{timeLimit,jdbcType=BIGINT}
    </select>
    <update id="updateByUserId" >
    update login_tokens
    set time_limit = 0
    where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="selectToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from login_tokens
        where token = #{token,jdbcType=VARCHAR}
    </select>
</mapper>