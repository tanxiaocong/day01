<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vsc.website.dao.ProgramsMapper">
    <resultMap id="BaseResultMap" type="com.vsc.website.entity.Programs">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="industry_id" jdbcType="INTEGER" property="industryId"/>
        <result column="icon_url" jdbcType="VARCHAR" property="iconUrl"/>
        <result column="plan_location" jdbcType="INTEGER" property="planLocation"/>
        <result column="home_location" jdbcType="INTEGER" property="homeLocation"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="show_flag" jdbcType="INTEGER" property="showFlag"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="kind_id" jdbcType="INTEGER" property="kindId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, industry_id, icon_url, plan_location, home_location, update_user, update_at, 
    create_user, create_at,state,show_flag,kind_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from programs
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from programs
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.vsc.website.entity.Programs" useGeneratedKeys="true" keyProperty="id">
    insert into programs (id, industry_id, icon_url,
      plan_location, home_location, update_user, 
      update_at, create_user, create_at,state,show_flag,kind_id
      )
    values (#{id,jdbcType=INTEGER},#{industryId,jdbcType=INTEGER}, #{iconUrl,jdbcType=VARCHAR},
      #{planLocation,jdbcType=INTEGER}, #{homeLocation,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP},#{state,jdbcType=INTEGER}
      ,#{showFlag,jdbcType=INTEGER},#{kindId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.vsc.website.entity.Programs">
        insert into programs
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="industryId != null">
                industry_id,
            </if>
            <if test="iconUrl != null">
                icon_url,
            </if>
            <if test="planLocation != null">
                plan_location,
            </if>
            <if test="homeLocation != null">
                home_location,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="showFlag != null">
                showFlag,
            </if>
            <if test="kindId != null">
                kind_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="industryId != null">
                #{industryId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                #{iconUrl,jdbcType=VARCHAR},
            </if>
            <if test="planLocation != null">
                #{planLocation,jdbcType=INTEGER},
            </if>
            <if test="homeLocation != null">
                #{homeLocation,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="showFlag != null">
                #{showFlag,jdbcType=INTEGER},
            </if>
            <if test="kindId != null">
                #{kindId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.vsc.website.entity.Programs">
        update programs
        <set>
            <if test="industryId != null">
                industry_id = #{industryId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                icon_url = #{iconUrl,jdbcType=VARCHAR},
            </if>
            <if test="planLocation != null">
                plan_location = #{planLocation,jdbcType=INTEGER},
            </if>
            <if test="homeLocation != null">
                home_location = #{homeLocation,jdbcType=INTEGER},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="showFlag != null">
                show_flag = #{showFlag,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="kindId != null">
                kind_id = #{kindId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vsc.website.entity.Programs">
    update programs
    set industry_id = #{industryId,jdbcType=INTEGER},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      plan_location = #{planLocation,jdbcType=INTEGER},
      home_location = #{homeLocation,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      show_flag = #{showFlag,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      kind_id = #{kindId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="list" resultType="com.vsc.website.vo.backend.BProgramListVo">
        select distinct A.id,A.state,A.industry_id,A.show_flag,A.icon_url,C.filename_original as
        iconName,A.plan_location,A.home_location,E.name as update_user,A.update_at,A.kind_id,
        D.program_name,D.language,
        (select dict_name from dict_name where dict_id=A.industry_id and language=D.language) as industryName,
        (select dict_name from dict_name where dict_id=A.kind_id and language=D.language) as kindName
        from programs A
        inner join attachment C on A.icon_url=C.filename
        inner join programs_names D on A.id=D.program_id
        inner join user E on A.update_user=E.id
        where 1=1
        <if test="keywords != null">
            and (D.program_name like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%')
            or D.program_description like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%')
            or D.program_function like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%')
            or D.feature like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%')
            or D.similar_case like CONCAT('%',#{keywords,jdbcType=VARCHAR},'%'))
        </if>
        <if test="language != null">
            and D.language=#{language,jdbcType=INTEGER}
        </if>
        order by A.industry_id,A.plan_location
    </select>

    <select id="detail" resultType="com.vsc.website.vo.backend.BProgramDetailVo">
    select A.id,A.state,A.industry_id,A.icon_url,C.filename_original as iconName,A.plan_location,A.home_location,D.name as update_user,A.update_at,show_flag,A.kind_id,P.language,
    (select dict_name from dict_name where dict_id=A.industry_id and language=P.language) as industryName,
    (select dict_name from dict_name where dict_id=A.kind_id and language=P.language) as kindName
    from programs A
    inner join programs_names P on A.id=P.program_id
    inner join attachment C on A.icon_url=C.filename
    inner join user D on A.update_user=D.id
    where A.id=#{id,jdbcType=INTEGER}
  </select>

    <select id="selectByHomeLocation" resultMap="BaseResultMap">
        select
        P.id, industry_id, icon_url, plan_location, home_location, P.update_user, P.update_at,
        P.create_user, P.create_at,state,show_flag,kind_id
        from programs P
        inner join programs_names PN on P.id=PN.program_id
        where P.home_location= #{homeLocation,jdbcType=INTEGER}
        and PN.language=#{language,jdbcType=INTEGER}
    </select>

    <update id="updateByHomeLocation" parameterType="java.lang.Integer">
    update programs P set home_location=home_location+1
    where home_location >= #{homeLocation,jdbcType=INTEGER}
    and P.id in
    (select program_id from programs_names where language=#{language,jdbcType=INTEGER})
  </update>

    <select id="getProgramAll" resultType="com.vsc.website.vo.frontend.FProgramNamesVo">
    select A.id, B.program_name,A.kind_id,A.plan_location,B.program_function
    from programs A
    inner join programs_names B on A.id=B.program_id and B.language=#{language,jdbcType=INTEGER}
    where A.state=1
    order by plan_location
  </select>

    <select id="getHomeView" resultType="com.vsc.website.vo.frontend.FProgramViewVo">
    select A.id,A.icon_url,A.industry_id,C.dict_name as industryName,B.program_name,B.program_description,B.program_function
    from programs A
    inner join programs_names B on A.id=B.program_id and B.language=#{language,jdbcType=INTEGER}
    inner join dict_name C on A.industry_id=C.dict_id and C.language=#{language,jdbcType=INTEGER}
    where A.state=1 and A.show_flag=1
    order by A.home_location
    limit 3
  </select>
</mapper>